<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>USM All Trainings</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(45deg, #612ccd 0%, #541170 99%, #8902ff 100%);
            min-height: 100vh;
            padding: 1rem;
        }

        .trainings-container {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 1.5rem;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
            border: 1px solid rgba(255, 255, 255, 0.18);
            transform: translateY(20px);
            opacity: 0;
            animation: fadeIn 0.5s ease-out forwards;
        }

        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            padding: 1rem;
            border-radius: 8px;
            text-align: center;
            color: white;
        }

        .stat-card h3 {
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
            color: rgba(255, 255, 255, 0.8);
        }

        .stat-card p {
            font-size: 1.5rem;
            font-weight: 600;
        }

        .filters-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .filter-input {
            padding: 0.75rem;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            transition: all 0.3s ease;
        }

        .filter-input:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.2);
        }

        .filter-input::placeholder {
            color: rgba(255, 255, 255, 0.6);
        }

        .filter-input option {
            background: #541170;
            color: white;
        }

        .training-grid {
            display: grid;
            gap: 1rem;
        }

        .training-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 1.5rem;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .training-card:hover {
            transform: translateY(-2px);
            background: rgba(255, 255, 255, 0.15);
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }

        .page-btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .page-btn:hover:not(.active) {
            background: rgba(255, 255, 255, 0.2);
        }

        .page-btn.active {
            background: #4299e1;
        }

        .export-btn {
            background: #4299e1;
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 1rem;
        }

        .export-btn:hover {
            background: #3182ce;
        }

        .loading {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            display: none;
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        .chart-container {
            background: rgba(255, 255, 255, 0.1);
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            height: 300px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .filters-container {
                grid-template-columns: 1fr;
            }
            
            .stats-container {
                grid-template-columns: 1fr;
            }

            .training-card {
                font-size: 0.9rem;
            }
        }
    </style>
</head>
<body>
    <div class="loading">
        <div class="loading-spinner"></div>
    </div>

    <div class="trainings-container">
        <div class="stats-container">
            <div class="stat-card">
                <h3>Total Trainings</h3>
                <p><%= totalTrainings %></p>
            </div>
            <div class="stat-card">
                <h3>Total XP Awarded</h3>
                <p><%= totalXPAwarded %></p>
            </div>
            <div class="stat-card">
                <h3>Pending Approvals</h3>
                <p><%= pendingApprovals %></p>
            </div>
        </div>

        <div class="chart-container">
            <canvas id="trainingChart"></canvas>
        </div>

        <button class="export-btn" onclick="exportTrainings()">Export to CSV</button>

        <div class="filters-container">
            <input type="text" id="searchInput" placeholder="Search trainer/trainee..." class="filter-input">
            <select id="statusFilter" class="filter-input">
                <option value="all">All Status</option>
                <option value="approved">Approved</option>
                <option value="pending">Pending</option>
            </select>
            <select id="sortFilter" class="filter-input">
                <option value="newest">Newest First</option>
                <option value="oldest">Oldest First</option>
                <option value="xp-high">Highest XP</option>
                <option value="xp-low">Lowest XP</option>
            </select>
            <input type="date" id="dateFilter" class="filter-input">
        </div>

        <div class="training-grid">
            <% if (trainings && trainings.length > 0) { %>
                <% trainings.forEach(training => { %>
                    <div class="training-card" onclick="viewTraining('<%= training._id %>')">
                        <div class="training-info">
                            <div class="training-row">
                                <strong>Trainer:</strong>
                                <span><%= training.trainer %></span>
                            </div>
                            <div class="training-row">
                                <strong>Trainees:</strong>
                                <span><%= training.trainees.join(', ') %></span>
                            </div>
                            <div class="training-row">
                                <strong>XP Amount:</strong>
                                <span><%= training.xpAmount %></span>
                            </div>
                            <div class="training-row">
                                <strong>Date:</strong>
                                <span><%= new Date(training.dateSubmitted).toLocaleDateString() %></span>
                            </div>
                            <div class="training-row">
                                <strong>Status:</strong>
                                <% if (training.awarded) { %>
                                    <span class="status-badge status-approved">Approved</span>
                                <% } else if (training.needsApproval) { %>
                                    <span class="status-badge status-pending">Pending</span>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-trainings">
                    <h3>No training records found</h3>
                </div>
            <% } %>
        </div>

        <div class="pagination">
            <% for(let i = 1; i <= totalPages; i++) { %>
                <button class="page-btn <%= currentPage === i ? 'active' : '' %>" 
                        onclick="changePage(<%= i %>)">
                    <%= i %>
                </button>
            <% } %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let trainings = <%- JSON.stringify(trainings) %>;
        const loading = document.querySelector('.loading');

        // Initialize chart
        const ctx = document.getElementById('trainingChart').getContext('2d');
        const trainingChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [], // Will be filled with dates
                datasets: [{
                    label: 'XP Awarded',
                    data: [], // Will be filled with XP amounts
                    borderColor: '#4299e1',
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });

        // Filter functionality
        function applyFilters() {
            loading.style.display = 'flex';
            const search = document.getElementById('searchInput').value.toLowerCase();
            const status = document.getElementById('statusFilter').value;
            const sort = document.getElementById('sortFilter').value;
            const date = document.getElementById('dateFilter').value;

            fetch('/forms/alltrainings/filter', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ search, status, sort, date })
            })
            .then(res => res.json())
            .then(data => {
                trainings = data.trainings;
                updateTrainingDisplay();
                loading.style.display = 'none';
            });
        }

        // Pagination
        function changePage(page) {
            loading.style.display = 'flex';
            window.location.href = `/forms/alltrainings?page=${page}`;
        }

        // Export functionality
        function exportTrainings() {
            window.location.href = '/forms/alltrainings/export';
        }

        // View individual training
        function viewTraining(id) {
            window.location.href = `/forms/alltrainings/${id}`;
        }

        // Event listeners
        document.getElementById('searchInput').addEventListener('input', applyFilters);
        document.getElementById('statusFilter').addEventListener('change', applyFilters);
        document.getElementById('sortFilter').addEventListener('change', applyFilters);
        document.getElementById('dateFilter').addEventListener('change', applyFilters);
    </script>
</body>
</html>