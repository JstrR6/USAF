<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>USM All Trainings</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(45deg, #612ccd 0%, #541170 99%, #8902ff 100%);
            min-height: 100vh;
            padding: 2rem;
        }

        .trainings-container {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 2rem;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
            border: 1px solid rgba(255, 255, 255, 0.18);
        }

        .nav-menu {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .nav-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 0.75rem 1.5rem;
            border-radius: 5px;
            color: white;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .nav-item:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .filters-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .filter-input option {
            background: #541170;
            color: black; 
        }

        .filter-input {
            padding: 0.75rem;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.1);
            color: black; 
        }

        .filter-input::placeholder {
        color: rgba(0, 0, 0, 0.6);  /* Changed to be darker */
        }

        .training-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 1.5rem;
            color: white;
            margin-bottom: 1rem;
        }

        .training-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.875rem;
        }

        .status-approved {
            background: #48bb78;
            color: white;
        }

        .status-pending {
            background: #ed8936;
            color: white;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }

        .page-btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            cursor: pointer;
        }

        .page-btn.active {
            background: #4299e1;
        }

        .header {
            color: white;
            margin-bottom: 2rem;
        }

        .no-trainings {
            text-align: center;
            color: white;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
        }
    </style>
</head>
<body>
    <div class="trainings-container">
        <h2 class="header">All Training Records</h2>

        <nav class="nav-menu">
            <a href="/dashboard" class="nav-item">Dashboard</a>
            <a href="/members" class="nav-item">Members</a>
            <a href="/forms" class="nav-item">Forms</a>
            <a href="/profile" class="nav-item">Profile</a>
        </nav>

        <div class="filters-container">
            <input type="text" id="searchInput" placeholder="Search trainer/trainee..." class="filter-input">
            <select id="statusFilter" class="filter-input">
                <option value="all">All Status</option>
                <option value="approved">Approved</option>
                <option value="pending">Pending</option>
            </select>
            <select id="sortFilter" class="filter-input">
                <option value="newest">Newest First</option>
                <option value="oldest">Oldest First</option>
            </select>
        </div>

        <div class="training-cards">
            <% if (trainings && trainings.length > 0) { %>
                <% trainings.forEach(training => { %>
                    <div class="training-card">
                        <div class="training-row">
                            <strong>Trainer:</strong>
                            <span><%= training.trainer %></span>
                        </div>
                        <div class="training-row">
                            <strong>Trainees:</strong>
                            <span><%= training.trainees.join(', ') %></span>
                        </div>
                        <div class="training-row">
                            <strong>XP Amount:</strong>
                            <span><%= training.xpAmount %></span>
                        </div>
                        <div class="training-row">
                            <strong>Date:</strong>
                            <span><%= new Date(training.dateSubmitted).toLocaleDateString() %></span>
                        </div>
                        <div class="training-row">
                            <strong>Status:</strong>
                            <% if (training.awarded) { %>
                                <span class="status-badge status-approved">Approved</span>
                            <% } else if (training.needsApproval) { %>
                                <span class="status-badge status-pending">Pending</span>
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="no-trainings">
                    <h3>No training records found</h3>
                </div>
            <% } %>
        </div>

        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <button class="page-btn <%= currentPage === i ? 'active' : '' %>" 
                            onclick="window.location.href='/forms/alltrainings?page=<%= i %>'">
                        <%= i %>
                    </button>
                <% } %>
            </div>
        <% } %>
    </div>

    <script>
        // Simple search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const cards = document.querySelectorAll('.training-card');
            
            cards.forEach(card => {
                const text = card.textContent.toLowerCase();
                card.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });

        // Status filter
        document.getElementById('statusFilter').addEventListener('change', function(e) {
            const status = e.target.value;
            const cards = document.querySelectorAll('.training-card');
            
            cards.forEach(card => {
                if (status === 'all') {
                    card.style.display = '';
                    return;
                }
                
                const hasStatus = card.querySelector(status === 'approved' ? 
                    '.status-approved' : '.status-pending');
                card.style.display = hasStatus ? '' : 'none';
            });
        });

        // Sort filter
        document.getElementById('sortFilter').addEventListener('change', function(e) {
            const container = document.querySelector('.training-cards');
            const cards = Array.from(container.querySelectorAll('.training-card'));
            
            cards.sort((a, b) => {
                const dateA = new Date(a.querySelector('.training-row:nth-child(4) span').textContent);
                const dateB = new Date(b.querySelector('.training-row:nth-child(4) span').textContent);
                return e.target.value === 'newest' ? dateB - dateA : dateA - dateB;
            });
            
            container.innerHTML = '';
            cards.forEach(card => container.appendChild(card));
        });
    </script>
</body>
</html>