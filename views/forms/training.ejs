<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>USM Training Form</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(45deg, #612ccd 0%, #541170 99%, #8902ff 100%);
            min-height: 100vh;
            padding: 2rem;
        }

        .training-container {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border-radius: 10px;
            padding: 2rem;
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
            border: 1px solid rgba(255, 255, 255, 0.18);
            transform: translateY(20px);
            opacity: 0;
            animation: fadeIn 0.5s ease-out forwards;
        }

        .training-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            color: #fff;
        }

        .nav-menu {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .nav-item {
            background: rgba(255, 255, 255, 0.1);
            padding: 0.75rem 1.5rem;
            border-radius: 5px;
            color: white;
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .nav-item:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
        }

        .search-container {
            margin: 2rem 0;
        }

        .training-form {
            display: none;
            margin-top: 2rem;
        }

        .success-message, .error-message {
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1rem;
            text-align: center;
            font-weight: 500;
        }

        .success-message {
            background: rgba(72, 187, 120, 0.2);
            color: #2f855a;
            display: none;
        }

        .error-message {
            background: rgba(245, 101, 101, 0.2);
            color: #c53030;
            display: none;
        }

        button:disabled {
            opacity: 0.7;
            cursor: not-allowed;
        }

        input, button {
            width: 100%;
            padding: 0.75rem;
            margin-bottom: 1rem;
            border: none;
            border-radius: 5px;
            background: rgba(255, 255, 255, 0.5);
            color: #333;
        }

        input:focus {
            outline: none;
            background: rgba(255, 255, 255, 0.8);
        }

        button {
            background: #4299e1;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
        }

        button:hover {
            background: #3182ce;
            transform: translateY(-2px);
        }

        .error-message {
            color: #ff6b6b;
            margin-bottom: 1rem;
            display: none;
        }

        .success-message {
            color: #51cf66;
            margin-bottom: 1rem;
            display: none;
        }

        @keyframes fadeIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <div class="training-container">
        <div class="training-header">
            <h2>Training Form</h2>
            <span class="user-rank"><%= highestRole %></span>
        </div>

        <nav class="nav-menu">
            <a href="/dashboard" class="nav-item">Dashboard</a>
            <a href="/members" class="nav-item">Members</a>
            <a href="/forms" class="nav-item">Forms</a>
            <a href="/profile" class="nav-item">Profile</a>
        </nav>

        <div class="search-container">
            <input type="text" id="trainerSearch" placeholder="Enter trainer username">
            <button onclick="findTrainer()">Find</button>
            <div class="error-message" id="errorMessage"></div>
        </div>

        <form id="trainingForm" class="training-form">
            <input type="text" id="trainees" placeholder="Trainee usernames (separated by commas)" required>
            <input type="number" id="xpAmount" placeholder="XP Amount" required min="0">
            <button type="submit">Submit Training</button>
            <div class="success-message" id="successMessage"></div>
        </form>
    </div>

    <script>
        async function findTrainer() {
            const trainerUsername = document.getElementById('trainerSearch').value;
            const errorMessage = document.getElementById('errorMessage');
            const trainingForm = document.getElementById('trainingForm');
    
            try {
                const response = await fetch(`/forms/training/verify/${trainerUsername}`);
                const data = await response.json();
        
                if (data.success) {
                    document.querySelector('.search-container').style.display = 'none';
                    trainingForm.style.display = 'block';
                    errorMessage.style.display = 'none';
                } else {
                    errorMessage.textContent = 'Trainer not found';
                    errorMessage.style.display = 'block';
                }
                } catch (error) {
                    errorMessage.textContent = 'Error finding trainer';
                    errorMessage.style.display = 'block';
                    console.error('Error:', error); // This will help debug
                }
            }

            document.getElementById('trainingForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const submitButton = e.target.querySelector('button[type="submit"]');
    const successMessage = document.getElementById('successMessage');
    const errorMessage = document.getElementById('errorMessage');
    
    // Disable submit button and show loading state
    submitButton.disabled = true;
    submitButton.textContent = 'Submitting...';
    
    try {
        const response = await fetch('/forms/training/submit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                trainer: document.getElementById('trainerSearch').value,
                trainees: document.getElementById('trainees').value,
                xpAmount: parseInt(document.getElementById('xpAmount').value)
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            // Show success message
            successMessage.textContent = data.message;
            successMessage.style.display = 'block';
            errorMessage.style.display = 'none';
            
            // Reset form
            document.getElementById('trainingForm').reset();
            
            // After 3 seconds, reset the form display
            setTimeout(() => {
                document.querySelector('.search-container').style.display = 'block';
                document.getElementById('trainingForm').style.display = 'none';
                successMessage.style.display = 'none';
                document.getElementById('trainerSearch').value = '';
            }, 3000);
            
        } else {
            // Show error message
            errorMessage.textContent = data.message;
            errorMessage.style.display = 'block';
            successMessage.style.display = 'none';
        }
    } catch (error) {
        errorMessage.textContent = 'Error submitting training';
        errorMessage.style.display = 'block';
        successMessage.style.display = 'none';
    } finally {
        // Re-enable submit button
        submitButton.disabled = false;
        submitButton.textContent = 'Submit Training';
    }
});
    </script>
</body>
</html>